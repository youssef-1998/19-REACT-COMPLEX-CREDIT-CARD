{"version":3,"sources":["puce 1.png","visa.jpeg","CreditCart.js","ZoneTexte.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CreditCart","props","className","class","src","puce","zonetext","num","padEnd","replace","dat","slice","text","visa","ZoneText","FNchangeinputNUM","e","target","value","match","setState","validN","status","messageN","length","statusN","FNchangeinputDAT","validD","messageD","statusD","FNchangeinputnumTEXT","validT","statusT","messageT","state","bind","this","type","placeholder","onChange","style","color","React","Component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67c08d03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/puce 1.7cf0ee8b.png\";","module.exports = __webpack_public_path__ + \"static/media/visa.260255dd.jpeg\";","import React from 'react'\r\nimport puce from './puce 1.png';\r\nimport visa from './visa.jpeg';\r\n\r\n\r\nconst CreditCart = (props) => {\r\n    return (\r\n\r\n        <div className='card'>\r\n           \r\n            <h1 class=\"grand-titre\"> CREDIT CARD </h1>\r\n            <img className=\"puce\" src={puce}/> \r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"column\">\r\n                   \r\n                    <p className=\"num-1\"  >{props.zonetext.num ===\"\" ? \"**** **** **** ****\" : props.zonetext.num.padEnd(16,\"*\").replace(/\\d{4}(?=.)/g, '$& ') } </p>\r\n                    <p className=\"t-date\">MONTH/YEAR</p>\r\n\r\n                    <div className=\"l-2-horizontal\">\r\n                        <p className=\"n-date\">5422</p>\r\n\r\n                        <div className=\"box-right\">\r\n                            <p className=\"validation\">VALID<br />THRU</p>\r\n                            <i class=\"fas fa-caret-right\" ></i>\r\n                           \r\n                            <p className=\"n-date\"   >  {props.zonetext.dat ===\"\" ? \"**/**\" : props.zonetext.dat.slice(0, 2) + \"/\" + props.zonetext.dat.slice(2, 4)  } </p>\r\n                        </div>\r\n\r\n                    </div>\r\n                   \r\n                    <p className=\"sous-titre\"  > {props.zonetext.text ===\"\" ? \"**********\" : props.zonetext.text} </p>\r\n\r\n                </div>\r\n\r\n                <img className=\"visa\" src={visa}></img>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CreditCart","import React, { Component } from 'react';\r\nimport CreditCart from './CreditCart'\r\n\r\n\r\nclass ZoneText extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            num: \"\",\r\n            dat: \"\",\r\n            text: \"\",\r\n\r\n            validN: {\r\n                statusN: true,\r\n                messageN: \"\"\r\n            },\r\n\r\n            validD: {\r\n                statusD: true,\r\n                messageD: \"\"\r\n            },\r\n\r\n            validT: {\r\n                statusT: true,\r\n                messageT: \"\"\r\n            }\r\n        }\r\n\r\n        this.FNchangeinputNUM = this.FNchangeinputNUM.bind(this);\r\n        this.FNchangeinputDAT = this.FNchangeinputDAT.bind(this);\r\n        this.FNchangeinputnumTEXT = this.FNchangeinputnumTEXT.bind(this);\r\n    }\r\n    /************************************** handlechange  *********************************/\r\n    FNchangeinputNUM = (e) => {\r\n        var numVali = /[^0-9]+/g;\r\n        if (e.target.value.match(numVali)) {\r\n            this.setState({ validN: { status: false, messageN: \"Tape only number\" } });\r\n        } else if (e.target.value.length > 16) {\r\n            this.setState({ validN: { statusN: false, messageN: \"Max length 16\" } });\r\n        } else {\r\n            this.setState({\r\n                num: e.target.value,\r\n                validN: { statusN: true, messageN: \"\" }\r\n            });\r\n        }\r\n    }   \r\n    FNchangeinputDAT = (e) => {\r\n        var datVali = /[^0-9]+/g;\r\n        if (e.target.value.match(datVali)) {\r\n            this.setState({ validD: { status: false, messageD: \"Tape only number\" } });\r\n        } else if (e.target.value.length > 4) {\r\n            this.setState({ validN: { statusD: false, messageD: \"Max length 5\" } });\r\n        } else {\r\n            this.setState({\r\n                dat: e.target.value,\r\n                validD: { statusD: true, messageD: \"\" }\r\n            });\r\n        }\r\n    }\r\n    FNchangeinputnumTEXT = (e) => {\r\n        var textValid = /[^A-Z]+/g;\r\n        if (e.target.value.match(textValid)) {\r\n            this.setState({ validT: { statusT: false, messageT: \"Tape only lter uppercase\" } });\r\n        } else if (e.target.value.length > 8) {\r\n            this.setState({ validT: { statusT: false, messageT: \"Max length 8\" } });\r\n        } else {\r\n            this.setState({\r\n                text: e.target.value,\r\n                validT: { statusT: true, messageT: \"\" }\r\n            });\r\n        }\r\n    }\r\n    /***************************************************************************************/\r\n\r\n    render() {\r\n        const { validN,validD,validT } = this.state;\r\n        return (\r\n\r\n            <div className=\"all-input\">\r\n\r\n                <CreditCart zonetext={this.state} />\r\n                <div>\r\n                    < input className=\"exterieur-input\" type=\"text\" placeholder=\"  code\" onChange={this.FNchangeinputNUM} value={this.state.num} ></input >\r\n                       \r\n                    {!validN.statusN ? ( <span style={{ color: \"#ff0000\" }}> {validN.messageN} </span> ) : null }\r\n                    \r\n                    < input className=\"exterieur-input\" type=\"text\" placeholder=\"  validity\" onChange={this.FNchangeinputDAT} value={this.state.dat} ></input >\r\n\r\n                    {!validD.statusD ? ( <span style={{ color: \"#ff0000\" }}> {validD.messageD} </span> ) : null }\r\n\r\n                    < input className=\"exterieur-input\" type=\"text\" placeholder=\"  owner name\" onChange={this.FNchangeinputnumTEXT} value={this.state.text} ></input >\r\n\r\n                    {!validT.statusT ? ( <span style={{ color: \"#ff0000\" }}> {validT.messageT} </span> ) : null }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ZoneText","import React from 'react';\n\nimport './App.css';\nimport ZoneText from './ZoneTexte'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ZoneText />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}